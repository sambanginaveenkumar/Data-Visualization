<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='GroupAssignment_13' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Art-i-stick (Dataset_Visual Analytics)' inline='true' name='federated.0iy7cqs1px7oav16v74o3151dgkq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataset_Visual Analytics' name='excel-direct.0zsmq3h1tjugqd1bwnhbi0g85953'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/r direct/Tableau/Group Assignment/Dataset_Visual Analytics.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0zsmq3h1tjugqd1bwnhbi0g85953' name='Art-i-stick' table='[&apos;Art-i-stick$&apos;]' type='table'>
          <columns gridOrigin='A1:W10001:no:A1:W10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Cid' ordinal='0' />
            <column datatype='string' name='Art Auction House' ordinal='1' />
            <column datatype='integer' name='IsGood Purchase' ordinal='2' />
            <column datatype='real' name='Critic Ratings' ordinal='3' />
            <column datatype='integer' name='Buyer No' ordinal='4' />
            <column datatype='integer' name='Zip Code' ordinal='5' />
            <column datatype='date' date-parse-format='MM/dd/yyyy|#|#|dd-MM-yyyy' name='Art Purchase Date' ordinal='6' />
            <column datatype='real' name='Acq Cost' ordinal='7' />
            <column datatype='string' name='Art Category' ordinal='8' />
            <column datatype='string' name='Art Piece Size' ordinal='9' />
            <column datatype='string' name='Border of art piece' ordinal='10' />
            <column datatype='string' name='Art Type' ordinal='11' />
            <column datatype='string' name='Prominent Color' ordinal='12' />
            <column datatype='integer' name='Current Auction Price' ordinal='13' />
            <column datatype='string' name='Brush' ordinal='14' />
            <column datatype='integer' name='Brush Size' ordinal='15' />
            <column datatype='string' name='Brush Finesse' ordinal='16' />
            <column datatype='string' name='Art Nationality' ordinal='17' />
            <column datatype='string' name='GoodArt check' ordinal='18' />
            <column datatype='string' name='AuctionHouseGuarantee' ordinal='19' />
            <column datatype='string' name='Vnst' ordinal='20' />
            <column datatype='integer' name='Is It Online Sale' ordinal='21' />
            <column datatype='integer' name='PaintingAreaSize' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W10001:no:A1:W10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cid]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Cid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Art Auction House</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Art Auction House]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Art Auction House</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsGood Purchase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsGood Purchase]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>IsGood Purchase</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Critic Ratings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Critic Ratings]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Critic Ratings</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Buyer No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Buyer No]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Buyer No</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zip Code]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Zip Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Art Purchase Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Art Purchase Date]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Art Purchase Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Acq Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Acq Cost]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Acq Cost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Art Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Art Category]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Art Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Art Piece Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Art Piece Size]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Art Piece Size</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Border of art piece</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Border of art piece]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Border of art piece</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Art Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Art Type]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Art Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prominent Color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Prominent Color]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Prominent Color</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current Auction Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Current Auction Price]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Current Auction Price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Brush</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Brush]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Brush</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Brush Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Brush Size]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Brush Size</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Brush Finesse</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Brush Finesse]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Brush Finesse</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Art Nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Art Nationality]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Art Nationality</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GoodArt check</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GoodArt check]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>GoodArt check</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AuctionHouseGuarantee</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AuctionHouseGuarantee]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>AuctionHouseGuarantee</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vnst</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Vnst]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Vnst</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is It Online Sale</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Is It Online Sale]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>Is It Online Sale</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PaintingAreaSize</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PaintingAreaSize]</local-name>
            <parent-name>[Art-i-stick]</parent-name>
            <remote-alias>PaintingAreaSize</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Art Auction House]' role='dimension' type='nominal' />
      <column datatype='string' name='[Art Nationality]' role='dimension' type='nominal' />
      <column datatype='string' name='[Art Piece Size]' role='dimension' type='nominal' />
      <column datatype='string' name='[Art Type]' role='dimension' type='nominal' />
      <column caption='Auction House Guarantee' datatype='string' name='[AuctionHouseGuarantee]' role='dimension' type='nominal' />
      <column datatype='string' name='[Border of art piece]' role='dimension' type='nominal' />
      <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
      </column>
      <column caption='Is Profit Or Loss' datatype='string' name='[Calculation_260645883005501444]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_260645882993795073]&gt;0 Then&#13;&#10;&quot;Profit&quot;&#13;&#10;ELSE&#13;&#10;&quot;Loss&quot;&#13;&#10;end' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Painting Area Size' datatype='integer' name='[PaintingAreaSize]' role='measure' type='quantitative' />
      <column datatype='string' name='[Prominent Color]' role='dimension' type='nominal' />
      <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Art Auction House]' derivation='None' name='[none:Art Auction House:nk]' pivot='key' type='nominal' />
      <column-instance column='[Art Nationality]' derivation='None' name='[none:Art Nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[Art Piece Size]' derivation='None' name='[none:Art Piece Size:nk]' pivot='key' type='nominal' />
      <column-instance column='[Art Type]' derivation='None' name='[none:Art Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Border of art piece]' derivation='None' name='[none:Border of art piece:nk]' pivot='key' type='nominal' />
      <column-instance column='[Prominent Color]' derivation='None' name='[none:Prominent Color:nk]' pivot='key' type='nominal' />
      <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/r direct/Tableau/Group Assignment/Art-i-stick (Dataset_Visual Analytics).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/21/2018 07:06:33 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='72983' timestamp-start='2018-10-21 07:06:33.678' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Cid</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cid</remote-alias>
              <ordinal>0</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72983</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Art Auction House</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Art Auction House]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Art Auction House</remote-alias>
              <ordinal>1</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IsGood Purchase</remote-name>
              <remote-type>20</remote-type>
              <local-name>[IsGood Purchase]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IsGood Purchase</remote-alias>
              <ordinal>2</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Critic Ratings</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Critic Ratings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Critic Ratings</remote-alias>
              <ordinal>3</ordinal>
              <family>Art-i-stick</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72983</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Buyer No</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Buyer No]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Buyer No</remote-alias>
              <ordinal>4</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zip Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Zip Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zip Code</remote-alias>
              <ordinal>5</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Art Purchase Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Art Purchase Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Art Purchase Date</remote-alias>
              <ordinal>6</ordinal>
              <family>Art-i-stick</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>431</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Acq Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Acq Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Acq Cost</remote-alias>
              <ordinal>7</ordinal>
              <family>Art-i-stick</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>744</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Art Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Art Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Art Category</remote-alias>
              <ordinal>8</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Art Piece Size</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Art Piece Size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Art Piece Size</remote-alias>
              <ordinal>9</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Border of art piece</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Border of art piece]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Border of art piece</remote-alias>
              <ordinal>10</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Art Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Art Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Art Type</remote-alias>
              <ordinal>11</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>278</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Prominent Color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Prominent Color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Prominent Color</remote-alias>
              <ordinal>12</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Current Auction Price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Current Auction Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Current Auction Price</remote-alias>
              <ordinal>13</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5385</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Brush</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Brush]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Brush</remote-alias>
              <ordinal>14</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Brush Size</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Brush Size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Brush Size</remote-alias>
              <ordinal>15</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Brush Finesse</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Brush Finesse]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Brush Finesse</remote-alias>
              <ordinal>16</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Art Nationality</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Art Nationality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Art Nationality</remote-alias>
              <ordinal>17</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GoodArt check</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GoodArt check]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GoodArt check</remote-alias>
              <ordinal>18</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AuctionHouseGuarantee</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AuctionHouseGuarantee]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AuctionHouseGuarantee</remote-alias>
              <ordinal>19</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vnst</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Vnst]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vnst</remote-alias>
              <ordinal>20</ordinal>
              <family>Art-i-stick</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Is It Online Sale</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Is It Online Sale]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Is It Online Sale</remote-alias>
              <ordinal>21</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PaintingAreaSize</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PaintingAreaSize]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PaintingAreaSize</remote-alias>
              <ordinal>22</ordinal>
              <family>Art-i-stick</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>146</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.537088' measure-ordering='alphabetic' measure-percentage='0.462912' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Art Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Type 100&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 1007&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 101&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 1014&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 1026&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 14&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 16&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 160&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 161&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 173&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 200&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 202&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 217&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 218&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 231&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 256&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 268&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 291&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 328&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 333&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 356&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 375&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 405&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 413&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 427&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 436&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 45&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 450&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 484&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 535&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 610&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 641&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 643&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 669&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 674&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 686&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 689&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 708&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 804&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 806&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 81&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 813&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 818&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 839&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 846&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 861&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 905&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 908&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 915&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 916&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 934&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 974&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Type 996&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 1008&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 1051&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 112&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 128&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 145&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 15&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 152&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 189&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 193&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 214&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 23&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 230&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 250&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 253&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 279&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 293&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 342&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 344&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 363&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 430&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 441&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 445&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 477&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 490&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 505&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 530&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 531&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 532&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 537&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 551&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 596&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 612&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 650&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 666&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 690&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 699&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 715&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 718&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 720&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 737&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 770&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 775&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 798&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 814&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 834&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 859&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 907&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 922&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 927&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 951&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Type 964&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 1020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 1044&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 120&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 142&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 143&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 197&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 264&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 272&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 282&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 285&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 306&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 323&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 326&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 330&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 349&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 35&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 350&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 358&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 369&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 394&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 397&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 425&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 429&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 440&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 452&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 462&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 466&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 496&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 498&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 499&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 568&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 59&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 624&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 627&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 660&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 667&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 714&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 728&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 730&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 745&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 752&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 778&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 815&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 832&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 86&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 872&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 879&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 887&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 894&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 937&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 97&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 971&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Type 977&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 1005&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 1032&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 1035&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 1052&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 148&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 159&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 162&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 167&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 19&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 194&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 199&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 211&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 245&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 248&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 252&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 257&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 271&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 281&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 284&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 31&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 322&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 329&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 347&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 383&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 389&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 422&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 471&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 48&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 494&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 495&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 513&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 536&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 546&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 547&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 553&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 65&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 685&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 705&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 742&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 754&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 768&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 774&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 784&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 785&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 790&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 792&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 824&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 909&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 911&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 928&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 930&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Type 986&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 1018&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 1039&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 1045&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 1060&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 108&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 119&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 122&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 149&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 155&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 180&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 22&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 237&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 24&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 258&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 286&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 312&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 351&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 366&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 388&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 390&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 398&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 410&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 415&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 424&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 455&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 46&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 482&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 491&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 52&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 523&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 525&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 54&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 554&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 592&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 618&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 632&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 642&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 668&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 675&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 72&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 743&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 744&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 747&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 825&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 83&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 842&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 857&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 862&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 870&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 89&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 943&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 988&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Type 997&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 1006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 1010&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 115&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 124&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 132&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 134&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 165&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 170&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 184&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 209&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 225&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 270&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 297&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 309&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 314&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 339&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 341&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 36&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 408&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 417&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 420&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 44&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 444&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 447&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 470&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 472&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 51&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 515&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 521&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 541&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 606&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 616&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 619&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 635&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 645&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 656&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 70&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 713&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 735&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 746&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 772&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 777&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 789&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 808&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 868&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 875&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 893&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 895&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 901&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 910&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 940&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Type 975&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 1011&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 1028&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 103&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 1033&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 1057&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 130&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 146&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 156&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 183&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 210&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 229&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 243&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 255&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 298&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 304&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 310&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 332&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 336&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 353&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 37&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 370&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 373&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 385&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 40&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 428&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 479&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 501&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 514&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 517&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 534&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 569&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 587&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 593&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 62&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 623&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 634&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 661&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 698&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 750&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 793&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 836&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 863&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 878&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 890&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 90&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 913&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 931&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 947&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 958&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 968&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 969&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 980&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Type 989&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 1024&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 109&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 111&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 127&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 133&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 135&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 144&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 151&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 164&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 175&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 220&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 226&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 28&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 294&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 320&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 352&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 365&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 469&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 476&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 50&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 508&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 527&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 540&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 552&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 565&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 573&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 600&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 636&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 658&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 663&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 68&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 704&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 721&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 727&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 79&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 794&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 796&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 807&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 810&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 820&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 828&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 838&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 84&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 866&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 873&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 892&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 899&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 929&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 965&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 973&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 981&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Type 99&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 1012&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 1042&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 1059&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 106&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 117&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 12&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 123&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 186&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 192&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 204&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 216&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 261&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 267&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 288&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 299&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 325&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 331&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 354&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 359&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 364&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 386&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 400&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 404&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 426&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 437&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 458&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 465&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 49&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 581&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 597&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 622&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 657&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 681&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 682&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 719&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 732&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 739&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 779&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 795&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 799&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 800&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 822&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 849&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 858&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 865&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 897&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 904&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 921&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 952&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 985&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Type 998&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 1013&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 1017&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 1029&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 1058&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 1061&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 11&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 114&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 126&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 131&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 169&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 172&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 206&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 215&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 228&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 232&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 234&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 238&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 25&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 266&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 278&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 280&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 290&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 362&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 399&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 456&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 478&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 492&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 502&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 511&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 516&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 520&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 528&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 579&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 594&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 601&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 633&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 670&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 716&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 734&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 740&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 77&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 773&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 797&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 816&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 843&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 891&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 924&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 925&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 94&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 950&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 960&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 967&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Type 990&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 1016&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 1034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 1041&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 105&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 1053&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 118&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 147&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 157&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 166&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 242&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 246&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 269&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 308&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 334&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 338&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 378&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 401&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 419&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 434&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 464&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 493&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 497&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 504&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 507&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 510&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 542&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 567&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 576&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 61&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 617&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 628&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 644&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 664&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 672&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 683&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 703&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 71&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 738&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 759&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 767&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 782&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 783&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 833&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 840&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 841&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 852&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 902&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 914&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 932&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 933&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Type 957&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 1000&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 1023&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 1040&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 110&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 177&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 212&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 219&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 222&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 249&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 262&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 275&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 301&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 307&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 315&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 32&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 348&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 395&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 409&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 433&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 443&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 457&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 47&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 483&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 488&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 519&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 564&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 590&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 602&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 608&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 613&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 615&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 620&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 649&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 655&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 659&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 671&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 725&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 748&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 76&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 764&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 771&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 776&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 78&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 801&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 826&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 827&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 837&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 851&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 88&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 889&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 918&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 945&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Type 966&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 1002&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 1004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 1047&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 1056&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 116&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 158&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 196&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 198&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 240&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 241&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 263&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 265&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 313&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 360&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 368&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 372&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 376&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 41&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 43&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 439&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 449&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 453&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 461&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 467&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 539&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 544&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 548&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 55&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 558&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 562&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 577&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 585&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 591&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 631&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 639&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 679&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 695&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 696&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 726&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 733&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 757&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 760&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 80&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 844&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 856&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 881&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 883&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 896&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 903&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 959&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 961&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 983&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Type 984&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1037&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1046&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1054&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 1062&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 113&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 121&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 163&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 185&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 188&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 191&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 195&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 203&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 233&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 235&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 259&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 26&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 274&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 296&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 311&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 337&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 34&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 377&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 384&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 411&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 423&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 451&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 460&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 509&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 543&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 559&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 561&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 572&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 58&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 582&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 599&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 603&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 625&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 678&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 688&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 692&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 697&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 700&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 74&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 751&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 761&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 802&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 803&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 812&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 93&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Type 955&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 10&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 1015&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 102&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 1025&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 1036&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 190&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 283&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 300&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 318&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 319&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 345&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 346&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 374&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 39&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 402&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 407&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 412&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 42&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 421&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 454&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 538&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 550&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 557&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 566&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 580&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 588&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 629&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 647&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 653&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 710&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 722&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 723&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 75&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 758&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 763&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 766&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 769&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 786&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 82&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 830&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 831&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 85&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 869&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 886&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 900&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 92&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 946&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 949&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 96&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 978&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 992&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 994&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Type 999&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 1027&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 1043&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 141&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 154&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 174&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 176&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 178&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 221&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 224&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 227&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 244&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 247&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 302&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 303&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 340&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 406&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 459&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 481&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 500&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 506&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 518&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 56&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 563&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 57&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 575&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 583&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 584&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 586&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 630&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 662&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 69&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 712&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 717&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 729&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 731&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 749&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 756&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 762&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 780&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 781&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 817&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 845&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 848&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 864&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 882&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 888&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 923&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 935&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 941&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 944&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 948&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 982&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Type 993&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 1019&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 1031&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 1055&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 107&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 136&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 168&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 17&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 182&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 21&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 27&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 29&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 357&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 371&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 392&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 393&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 416&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 432&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 435&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 463&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 468&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 473&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 475&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 485&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 533&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 555&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 570&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 574&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 614&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 621&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 626&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 637&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 64&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 640&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 646&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 648&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 651&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 665&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 684&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 691&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 694&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 701&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 702&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 724&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 73&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 791&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 809&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 874&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 877&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 91&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 919&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 926&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 95&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Type 991&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 1030&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 104&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 1048&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 1050&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 153&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 18&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 20&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 201&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 236&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 251&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 276&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 287&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 289&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 292&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 295&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 30&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 321&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 324&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 327&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 343&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 355&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 381&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 391&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 418&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 438&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 474&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 486&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 503&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 545&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 560&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 571&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 609&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 611&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 63&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 66&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 673&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 680&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 687&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 693&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 707&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 736&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 753&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 805&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 811&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 819&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 847&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 854&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 880&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 954&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 962&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 963&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 972&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Type 987&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 1009&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 1022&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 1038&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 125&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 138&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 140&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 150&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 171&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 181&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 205&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 207&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 260&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 317&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 33&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 335&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 379&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 38&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 396&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 403&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 414&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 431&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 442&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 446&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 448&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 487&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 512&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 522&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 526&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 556&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 589&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 598&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 605&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 607&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 638&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 676&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 706&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 709&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 711&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 741&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 755&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 765&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 787&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 823&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 867&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 87&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 871&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 884&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 898&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 912&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 920&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 953&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 970&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Type 98&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 1049&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 129&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 137&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 139&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 179&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 187&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 208&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 213&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 223&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 239&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 254&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 273&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 277&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 305&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 316&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 361&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 367&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 380&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 382&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 387&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 480&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 489&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 524&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 529&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 53&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 549&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 578&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 595&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 60&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 604&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 652&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 654&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 67&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 788&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 821&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 829&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 835&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 850&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 853&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 855&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 860&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 876&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 885&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 906&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 917&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 938&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 939&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 942&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 956&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 976&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 979&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Type 995&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Art Nationality:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NULL&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Vnst:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Art Auction House:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Christie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sotheby&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Artnet&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Art Piece Size:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;10in. X 21in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11in. X 11in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11in. X 17in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11in. X 22in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11in. X 25in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11in. X 26in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12in. X 25in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;13in. X 17in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;13in. X 20in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;13in. X 23in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;14in. X 23in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;14in. X 26in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;14in. X 3in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;16in. X 14in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;16in. X 27in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;17in. X 11in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;17in. X 24in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19in. X 12in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1in. X 19in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;20in. X 20in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;20in. X 25in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;20in. X 2in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;22in. X 6in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;23in. X 5in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25in. X 1in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28in. X 17in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28in. X 20in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28in. X 8in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29in. X 10in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29in. X 14in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2in. X 24in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2in. X 4in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;30in. X 18in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3in. X 13in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4in. X 12in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5in. X 6in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5in. X 9in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6in. X 22in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6in. X 23in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7in. X 17in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8in. X 18in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8in. X 22in.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9in. X 20in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10in. X 10in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11in. X 20in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11in. X 5in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12in. X 30in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;13in. X 18in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;15in. X 17in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;16in. X 11in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;17in. X 14in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;17in. X 1in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;17in. X 7in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;17in. X 8in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18in. X 11in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18in. X 20in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18in. X 28in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19in. X 16in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1in. X 20in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;20in. X 12in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;20in. X 5in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21in. X 19in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21in. X 7in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;22in. X 16in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23in. X 1in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23in. X 7in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;24in. X 28in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;25in. X 38in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;26in. X 11in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27in. X 18in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;29in. X 18in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2in. X 17in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;30in. X 16in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;38in. X 24in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3in. X 29in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4in. X 15in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4in. X 30in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4in. X 7in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;54in. X 50in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6in. X 3in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6in. X 5in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7in. X 27in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8in. X 28in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8in. X 2in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8in. X 7in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9in. X 12in.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9in. X 25in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10in. X 22in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10in. X 24in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10in. X 3in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;13in. X 28in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;13in. X 5in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14in. X 10in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14in. X 20in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14in. X 22in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14in. X 8in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15in. X 10in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15in. X 14in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15in. X 18in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15in. X 19in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;15in. X 29in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;16in. X 22in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;17in. X 3in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18in. X 25in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1in. X 8in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;20in. X 23in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;20in. X 26in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;20in. X 30in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21in. X 20in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21in. X 5in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;22in. X 28in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;22in. X 8in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24in. X 5in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24in. X 7in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;26in. X 23in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28in. X 19in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;30in. X 14in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;38in. X 23in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3in. X 11in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3in. X 7in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4in. X 17in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4in. X 4in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5in. X 19in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6in. X 27in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6in. X 28in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6in. X 6in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7in. X 22in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8in. X 19in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8in. X 4in.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9in. X 5in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10in. X 7in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11in. X 6in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13in. X 29in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14in. X 14in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14in. X 29in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;15in. X 9in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;16in. X 1in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;16in. X 3in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;17in. X 13in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;18in. X 23in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19in. X 15in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;20in. X 14in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;20in. X 9in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;21in. X 25in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;22in. X 14in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;22in. X 18in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;23in. X 13in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;23in. X 6in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;24in. X 15in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;24in. X 23in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25in. X 24in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;25in. X 2in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26in. X 14in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27in. X 4in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;27in. X 7in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28in. X 5in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30in. X 11in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;32in. X 24in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;38in. X 37in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;39in. X 39in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3in. X 18in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3in. X 4in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3in. X 6in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4in. X 13in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5in. X 3in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6in. X 14in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6in. X 16in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6in. X 4in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8in. X 10in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9in. X 15in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9in. X 17in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9in. X 18in.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9in. X 28in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10in. X 14in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10in. X 16in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11in. X 10in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12in. X 20in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;13in. X 12in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;13in. X 21in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;13in. X 26in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;14in. X 28in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;15in. X 7in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;18in. X 10in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;18in. X 3in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1in. X 18in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1in. X 22in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;21in. X 14in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;22in. X 19in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;23in. X 8in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;23in. X 9in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25in. X 25in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25in. X 6in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26in. X 21in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26in. X 25in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26in. X 7in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;26in. X 8in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27in. X 13in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27in. X 14in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27in. X 26in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27in. X 29in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27in. X 3in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28in. X 14in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28in. X 6in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;29in. X 19in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2in. X 10in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30in. X 20in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30in. X 24in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30in. X 4in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;37in. X 28in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4in. X 28in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4in. X 2in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5in. X 15in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5in. X 27in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5in. X 28in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6in. X 17in.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9in. X 8in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10in. X 8in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12in. X 21in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;13in. X 11in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;14in. X 25in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;14in. X 2in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;15in. X 8in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;16in. X 16in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;16in. X 7in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19in. X 11in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19in. X 28in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19in. X 3in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1in. X 25in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1in. X 29in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;20in. X 16in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;23in. X 11in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24in. X 13in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24in. X 17in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24in. X 25in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25in. X 17in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25in. X 22in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26in. X 13in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26in. X 18in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27in. X 19in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27in. X 24in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28in. X 10in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28in. X 2in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;29in. X 23in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2in. X 18in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;35in. X 29in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3in. X 21in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3in. X 27in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3in. X 28in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4in. X 19in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4in. X 22in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;55in. X 53in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5in. X 14in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5in. X 26in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7in. X 16in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7in. X 26in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7in. X 28in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7in. X 3in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9in. X 14in.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9in. X 3in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10in. X 25in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11in. X 7in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12in. X 10in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12in. X 11in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12in. X 15in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12in. X 1in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12in. X 29in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12in. X 8in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;14in. X 16in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;15in. X 13in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16in. X 19in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16in. X 6in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16in. X 8in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19in. X 26in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1in. X 12in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21in. X 1in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21in. X 28in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21in. X 3in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;22in. X 2in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;24in. X 18in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;24in. X 6in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25in. X 14in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25in. X 27in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25in. X 9in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26in. X 10in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26in. X 24in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26in. X 30in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;26in. X 34in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27in. X 5in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28in. X 22in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28in. X 29in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;29in. X 20in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2in. X 15in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;30in. X 7in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;30in. X 9in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37in. X 29in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3in. X 19in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3in. X 5in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4in. X 5in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5in. X 7in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6in. X 19in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7in. X 25in.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7in. X 6in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10in. X 19in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10in. X 20in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10in. X 30in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11in. X 3in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12in. X 27in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;13in. X 27in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;14in. X 15in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;15in. X 3in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;15in. X 5in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;17in. X 20in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;17in. X 26in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;17in. X 30in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18in. X 2in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18in. X 5in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19in. X 4in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1in. X 15in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21in. X 24in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22in. X 25in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22in. X 5in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;23in. X 30in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24in. X 11in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;25in. X 20in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27in. X 12in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27in. X 30in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;29in. X 9in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;30in. X 12in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;30in. X 3in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;30in. X 6in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;30in. X 8in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;32in. X 20in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3in. X 15in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3in. X 23in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3in. X 26in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;52in. X 53in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5in. X 17in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5in. X 23in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5in. X 2in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5in. X 30in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5in. X 5in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6in. X 25in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6in. X 29in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8in. X 14in.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8in. X 21in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10in. X 9in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12in. X 12in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12in. X 22in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12in. X 2in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;13in. X 10in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;13in. X 22in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18in. X 14in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1in. X 28in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1in. X 3in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;20in. X 1in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;20in. X 4in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21in. X 2in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21in. X 30in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21in. X 9in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;22in. X 11in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;22in. X 9in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23in. X 10in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23in. X 18in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23in. X 22in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23in. X 27in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24in. X 10in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24in. X 19in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24in. X 26in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24in. X 30in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25in. X 11in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25in. X 23in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;27in. X 21in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29in. X 24in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29in. X 25in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29in. X 27in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29in. X 2in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2in. X 12in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2in. X 13in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3in. X 14in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3in. X 9in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4in. X 24in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4in. X 8in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5in. X 24in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6in. X 7in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7in. X 29in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8in. X 9in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9in. X 26in.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9in. X 29in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10in. X 2in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11in. X 14in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11in. X 4in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12in. X 23in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12in. X 28in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12in. X 9in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14in. X 21in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;15in. X 25in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;16in. X 13in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;17in. X 23in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;17in. X 5in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18in. X 16in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18in. X 29in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19in. X 19in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19in. X 20in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1in. X 21in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21in. X 18in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;22in. X 17in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;22in. X 7in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;23in. X 24in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;23in. X 3in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24in. X 22in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24in. X 27in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24in. X 35in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25in. X 21in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;26in. X 12in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;26in. X 4in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28in. X 12in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28in. X 18in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;29in. X 1in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2in. X 25in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2in. X 8in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;30in. X 5in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;38in. X 32in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3in. X 24in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4in. X 9in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5in. X 8in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7in. X 19in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7in. X 9in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8in. X 25in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8in. X 6in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9in. X 16in.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9in. X 22in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11in. X 23in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11in. X 30in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12in. X 3in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;13in. X 7in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14in. X 6in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;16in. X 12in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;16in. X 29in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;16in. X 2in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;17in. X 21in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;18in. X 18in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19in. X 8in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1in. X 13in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1in. X 14in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1in. X 17in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1in. X 9in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;20in. X 17in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;20in. X 29in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;22in. X 26in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;22in. X 29in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;23in. X 19in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;23in. X 23in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;23in. X 25in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;24in. X 20in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;25in. X 7in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26in. X 15in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27in. X 20in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27in. X 27in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27in. X 9in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29in. X 16in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29in. X 26in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2in. X 11in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;30in. X 22in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4in. X 25in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5in. X 10in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5in. X 16in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5in. X 18in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7in. X 11in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7in. X 12in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7in. X 30in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7in. X 4in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8in. X 16in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8in. X 20in.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9in. X 23in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10in. X 13in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10in. X 4in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12in. X 13in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12in. X 17in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14in. X 19in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15in. X 16in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;16in. X 4in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;17in. X 10in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;17in. X 28in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;17in. X 2in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;18in. X 21in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;18in. X 6in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19in. X 23in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19in. X 27in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19in. X 7in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;20in. X 19in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21in. X 4in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;22in. X 1in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;22in. X 22in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;23in. X 16in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;23in. X 20in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;23in. X 2in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;24in. X 24in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;24in. X 4in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25in. X 3in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;25in. X 8in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26in. X 3in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26in. X 5in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27in. X 25in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27in. X 6in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28in. X 21in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2in. X 6in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30in. X 15in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30in. X 19in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30in. X 23in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;30in. X 28in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;36in. X 36in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4in. X 14in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4in. X 1in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5in. X 39in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6in. X 18in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6in. X 9in.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8in. X 5in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12in. X 19in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;13in. X 13in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;13in. X 19in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;13in. X 1in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16in. X 15in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17in. X 16in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17in. X 17in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17in. X 19in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17in. X 25in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17in. X 27in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19in. X 13in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;20in. X 10in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;20in. X 18in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;20in. X 8in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21in. X 12in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21in. X 13in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21in. X 22in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21in. X 26in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;22in. X 21in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;24in. X 1in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;24in. X 8in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25in. X 10in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25in. X 26in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27in. X 10in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27in. X 22in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28in. X 1in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;28in. X 9in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;29in. X 30in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2in. X 2in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3in. X 10in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3in. X 1in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3in. X 25in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5in. X 29in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6in. X 1in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6in. X 2in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7in. X 21in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7in. X 2in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8in. X 11in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8in. X 12in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8in. X 27in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8in. X 8in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9in. X 19in.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9in. X 6in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11in. X 2in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;13in. X 14in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;13in. X 16in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;13in. X 25in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;14in. X 11in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;14in. X 9in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15in. X 20in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15in. X 22in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15in. X 23in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15in. X 26in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15in. X 6in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;17in. X 18in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;17in. X 29in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18in. X 12in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18in. X 1in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1in. X 1in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1in. X 7in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20in. X 22in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21in. X 29in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21in. X 8in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;24in. X 3in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25in. X 15in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25in. X 30in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;26in. X 26in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;26in. X 29in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;29in. X 28in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;29in. X 5in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2in. X 16in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2in. X 9in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;30in. X 1in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;30in. X 21in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3in. X 12in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4in. X 3in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5in. X 20in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5in. X 21in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6in. X 20in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6in. X 26in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7in. X 13in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7in. X 8in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8in. X 23in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8in. X 24in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9in. X 13in.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9in. X 27in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11in. X 28in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12in. X 5in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12in. X 7in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;13in. X 3in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;14in. X 30in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;14in. X 7in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;15in. X 28in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;16in. X 5in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;18in. X 22in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19in. X 10in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19in. X 18in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1in. X 23in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1in. X 4in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;21in. X 10in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;22in. X 20in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25in. X 13in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25in. X 28in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;26in. X 1in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27in. X 8in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28in. X 16in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28in. X 27in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29in. X 22in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29in. X 29in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29in. X 6in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2in. X 22in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2in. X 23in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2in. X 29in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2in. X 30in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;30in. X 17in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;37in. X 32in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3in. X 8in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4in. X 26in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5in. X 12in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5in. X 13in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5in. X 4in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6in. X 21in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6in. X 8in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7in. X 15in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7in. X 18in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7in. X 7in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9in. X 10in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9in. X 1in.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9in. X 2in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10in. X 11in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10in. X 27in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10in. X 28in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11in. X 13in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11in. X 16in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11in. X 29in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12in. X 14in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;14in. X 24in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16in. X 10in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16in. X 20in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16in. X 23in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16in. X 28in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;17in. X 4in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;17in. X 6in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;18in. X 26in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1in. X 5in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;20in. X 21in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;22in. X 13in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;22in. X 15in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;22in. X 27in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;24in. X 2in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;26in. X 28in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27in. X 23in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;29in. X 3in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2in. X 19in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2in. X 20in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;30in. X 13in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;30in. X 27in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3in. X 17in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3in. X 20in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4in. X 29in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5in. X 11in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6in. X 24in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6in. X 30in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7in. X 10in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7in. X 14in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7in. X 1in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8in. X 13in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8in. X 1in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9in. X 24in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9in. X 30in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9in. X 4in.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9in. X 7in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10in. X 17in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11in. X 12in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11in. X 15in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11in. X 21in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11in. X 8in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;13in. X 4in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;14in. X 5in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15in. X 4in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16in. X 24in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16in. X 30in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18in. X 17in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18in. X 19in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18in. X 4in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18in. X 7in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18in. X 9in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19in. X 1in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20in. X 11in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20in. X 27in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20in. X 28in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20in. X 7in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21in. X 15in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21in. X 21in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;22in. X 3in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23in. X 14in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23in. X 15in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23in. X 26in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24in. X 12in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25in. X 16in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;26in. X 17in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;26in. X 2in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;27in. X 1in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28in. X 11in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;29in. X 12in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;29in. X 8in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2in. X 1in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;30in. X 30in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33in. X 25in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3in. X 30in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4in. X 16in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6in. X 10in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6in. X 11in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8in. X 15in.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9in. X 11in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11in. X 19in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11in. X 27in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;13in. X 15in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;13in. X 8in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14in. X 13in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15in. X 11in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15in. X 12in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15in. X 15in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15in. X 1in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15in. X 24in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16in. X 25in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16in. X 9in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;18in. X 27in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19in. X 21in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19in. X 22in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19in. X 25in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;20in. X 24in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;21in. X 27in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;22in. X 12in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;22in. X 30in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;23in. X 12in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;23in. X 32in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;24in. X 16in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;24in. X 21in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25in. X 29in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;25in. X 5in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26in. X 19in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27in. X 28in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27in. X 2in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28in. X 13in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28in. X 30in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2in. X 21in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2in. X 26in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2in. X 28in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33in. X 32in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37in. X 33in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4in. X 21in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4in. X 27in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5in. X 25in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7in. X 20in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8in. X 29in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8in. X 30in.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9in. X 21in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10in. X 12in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10in. X 18in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10in. X 26in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10in. X 6in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11in. X 1in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11in. X 24in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11in. X 9in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;13in. X 30in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14in. X 1in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;15in. X 30in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;16in. X 17in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;18in. X 13in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19in. X 17in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19in. X 24in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1in. X 11in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1in. X 24in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1in. X 30in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1in. X 6in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;21in. X 11in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;21in. X 23in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;21in. X 6in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;24in. X 9in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25in. X 12in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25in. X 18in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;25in. X 19in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26in. X 22in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26in. X 9in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;27in. X 11in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28in. X 15in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28in. X 25in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28in. X 3in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29in. X 15in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29in. X 7in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2in. X 27in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;30in. X 2in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31in. X 30in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;32in. X 37in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;37in. X 35in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4in. X 23in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5in. X 1in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5in. X 22in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6in. X 15in.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7in. X 23in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10in. X 29in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10in. X 5in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11in. X 18in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12in. X 18in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12in. X 4in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;13in. X 24in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;14in. X 18in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;15in. X 21in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;15in. X 2in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;16in. X 18in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;17in. X 12in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;18in. X 8in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19in. X 14in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19in. X 30in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19in. X 5in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19in. X 9in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1in. X 26in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1in. X 27in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;20in. X 15in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;20in. X 3in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;22in. X 23in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;22in. X 4in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23in. X 21in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23in. X 28in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23in. X 29in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23in. X 4in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25in. X 33in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26in. X 20in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;26in. X 27in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27in. X 17in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28in. X 23in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28in. X 7in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;29in. X 13in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2in. X 3in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2in. X 7in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30in. X 25in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3in. X 22in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3in. X 3in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7in. X 24in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7in. X 5in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8in. X 17in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8in. X 3in.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9in. X 9in.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Border of art piece:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Border 122&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Border 128&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Border 33&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Border 69&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Border 87&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Border E&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Border L&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border 1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border 11&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border 115&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border 26&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border 55&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border 99&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Border D&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 109&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 23&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 41&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 49&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 51&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Border 86&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border 105&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border 124&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border 25&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border 31&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border 8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border A&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Border SW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border 24&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border 42&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border 65&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border 81&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border 93&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border B&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Border TY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border 112&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border 18&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border 54&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border 58&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border 66&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border R&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Border W&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Border 103&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Border 113&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Border 126&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Border 77&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Border 84&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Border 9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border 114&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border 12&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border 131&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border 133&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border 40&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border 53&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Border Q&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Border 48&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Border 67&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Border 75&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Border 85&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Border F&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Border I&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 100&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 111&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 130&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 63&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 70&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Border 95&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Border 10&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Border 102&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Border 118&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Border 56&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Border 61&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Border 90&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Border 117&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Border 120&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Border 35&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Border 5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Border 62&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Border 89&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Border 104&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Border 119&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Border 21&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Border 4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Border 73&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Border 76&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Border 129&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Border 20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Border 36&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Border 43&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Border 57&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Border 98&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border 121&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border 125&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border 19&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border 22&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border 47&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border 92&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Border H&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border 108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border 7Y&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border 82&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border 91&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border 97&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border DT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Border G&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border 107&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border 127&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border 52&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border 68&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border 7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border 94&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Border C&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Border 110&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Border 30&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Border 34&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Border 60&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Border 79&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Border 96&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 59&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 71&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 72&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 74&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Border 83&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Border 101&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Border 116&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Border 32&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Border 64&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Border 78&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Border Z&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Prominent Color:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Maroon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purple&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Null&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yellow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Not Avail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ART Auction House'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Art Auction House]' role='dimension' type='nominal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Art Auction House]' derivation='None' name='[none:Art Auction House:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Current Auction Price]' derivation='Sum' name='[sum:Current Auction Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Current Auction Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</rows>
        <cols>([federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk] + ([federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Current Auction Price:qk] + [federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='ART Border'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Border of art piece]' role='dimension' type='nominal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Border of art piece]' derivation='None' name='[none:Border of art piece:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Border of art piece:nk]' direction='ASC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Border of art piece:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Border of art piece:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='AreaWise Online Purchase Data '>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='integer' name='[Is It Online Sale]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
            <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
            <column-instance column='[Is It Online Sale]' derivation='Sum' name='[sum:Is It Online Sale:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Is It Online Sale:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Is It Online Sale:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Areawise Profit Loss'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column caption='Is Profit Or Loss' datatype='string' name='[Calculation_260645883005501444]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Calculation_260645882993795073]&gt;0 Then&#13;&#10;&quot;Profit&quot;&#13;&#10;ELSE&#13;&#10;&quot;Loss&quot;&#13;&#10;end' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_260645883005501444]' derivation='None' name='[none:Calculation_260645883005501444:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zip Code]' derivation='None' name='[none:Zip Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Calculation_260645883005501444:nk]' />
              <lod column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Zip Code:ok]' />
              <lod column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' />
              <lod column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[Latitude (generated)]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Auc House  '>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
            <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Catwise User Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='string' name='[Art Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Critic Ratings]' role='measure' type='quantitative' />
            <column-instance column='[Art Category]' derivation='None' name='[none:Art Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Critic Ratings]' derivation='Sum' name='[sum:Critic Ratings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Critic Ratings:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Critic Ratings:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Critic Ratings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Critic Ratings:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Color'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Prominent Color]' role='dimension' type='nominal' />
            <column-instance column='[Prominent Color]' derivation='None' name='[none:Prominent Color:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Prominent Color:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Prominent Color:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Prominent Color:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Guarantee'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Auction House Guarantee' datatype='string' name='[AuctionHouseGuarantee]' role='dimension' type='nominal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[AuctionHouseGuarantee]' derivation='None' name='[none:AuctionHouseGuarantee:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:AuctionHouseGuarantee:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:AuctionHouseGuarantee:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Art Nationality]' role='dimension' type='nominal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Art Nationality]' derivation='None' name='[none:Art Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Piece size'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Art Piece Size]' role='dimension' type='nominal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Art Piece Size]' derivation='None' name='[none:Art Piece Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Piece Size:nk]' direction='ASC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
          <filter class='quantitative' column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Piece Size:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Piece Size:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Art Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Art Type]' role='dimension' type='nominal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Art Type]' derivation='None' name='[none:Art Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Type:nk]' direction='ASC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
          <filter class='quantitative' column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Type:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Art Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Current Auction Price]' derivation='Sum' name='[sum:Current Auction Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Art Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Art Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Current Auction Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk] + [federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Current Auction Price:qk])</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[tqr:Art Purchase Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Good Art'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[GoodArt check]' role='dimension' type='nominal' />
            <column-instance column='[GoodArt check]' derivation='None' name='[none:GoodArt check:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:GoodArt check:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:GoodArt check:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='P&amp;L Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='date' name='[Art Purchase Date]' role='dimension' type='ordinal' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Art Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Art Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[tqr:Art Purchase Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='RegionWise Profit/Loss'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
            <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
              <text column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Statewise Buyer Purchaes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='integer' name='[Buyer No]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cid]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
            <column-instance column='[Buyer No]' derivation='CountD' name='[ctd:Buyer No:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cid]' derivation='CountD' name='[ctd:Cid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' />
              <size column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[ctd:Cid:qk]' />
              <lod column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[ctd:Buyer No:qk]' />
              <text column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='User Nationalwise Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Art Nationality]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cid]' role='measure' type='quantitative' />
            <column-instance column='[Cid]' derivation='CountD' name='[ctd:Cid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Art Nationality]' derivation='None' name='[none:Art Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acq Cost]' derivation='Sum' name='[sum:Acq Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]' direction='DESC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Acq Cost:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[ctd:Cid:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='VNST'>
      <table>
        <view>
          <datasources>
            <datasource caption='Art-i-stick (Dataset_Visual Analytics)' name='federated.0iy7cqs1px7oav16v74o3151dgkq' />
          </datasources>
          <datasource-dependencies datasource='federated.0iy7cqs1px7oav16v74o3151dgkq'>
            <column datatype='real' name='[Acq Cost]' role='measure' type='quantitative' />
            <column caption='Price Difference' datatype='real' name='[Calculation_260645882993795073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Current Auction Price]-[Acq Cost]' />
            </column>
            <column datatype='integer' name='[Current Auction Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Vnst]' role='dimension' type='nominal' />
            <column-instance column='[Vnst]' derivation='None' name='[none:Vnst:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_260645882993795073]' derivation='Sum' name='[sum:Calculation_260645882993795073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]' direction='ASC' using='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</rows>
        <cols>[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Art Auction Story board' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='213' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='1' param='vert' removable='false' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='4878' id='3' type='title' w='99034' x='483' y='929' />
            <zone h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99034' x='483' y='5807' />
            <zone h='81533' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99034' x='483' y='17538'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='ART Auction Data Introduction' captured-sheet='' id='1' />
                  <story-point caption='User/Buyer pattern and rating anlysis' captured-sheet='User OverView' id='2' />
                  <story-point caption='Art Price Analysis' captured-sheet='Art Price Analysis' id='5' />
                  <story-point caption='Profit and Loss Analysis of Auction' captured-sheet='P&amp;L Overview' id='3' />
                  <story-point caption='Business Insights' captured-sheet='Sheet 19' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='65738' id='6' story-point-id='1' type='text' w='65118' x='17622' y='27178'>
          <formatted-text>
            <run bold='true' fontname='Tableau Book,serif'>Intro</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Dataset Used:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Dataset_Visual Analytics</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>&#10;·        The Art Auction dataset contains the details of 72,983 of art pieces sold in auction houses in </run>
            <run bold='true' fontalignment='0'>Sotheby, Artnet</run>
            <run fontalignment='0'> and </run>
            <run bold='true' fontalignment='0'>Christie</run>
            <run fontalignment='0'>. These houses will purchase the art from the artists and present them open markets and providing the </run>
            <run bold='true' fontalignment='0'>online services</run>
            <run fontalignment='0'> in now days as well.</run>
            <run fontalignment='0' fontcolor='#000000'>Æ </run>
            <run fontalignment='0'>&#10;·        On the Primary analysis it has been identified that all the three auction houses are incurring </run>
            <run bold='true' fontalignment='0'>losses</run>
            <run fontalignment='0'> due to high auction price.</run>
            <run fontalignment='0' fontcolor='#000000'>Æ </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Purpose ----&gt;</run>
            <run fontalignment='0' fontcolor='#59a14f'>T</run>
            <run fontalignment='0' fontcolor='#8cd17d'>o present the existing data in Visual Manner so to understand the current situation and Insights.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Users ----&gt;</run>
            <run fontalignment='0' fontcolor='#72b966'>Management/HOD and Strategy Team</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Frequency ----&gt;</run>
            <run fontalignment='0' fontcolor='#72b966'>Once in Month</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Level of detail  ---&gt;</run>
            <run fontalignment='0' fontcolor='#72b966'>Medium</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Context --&gt;</run>
            <run fontalignment='0' fontcolor='#72b966'> Business Growth</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Importance of data --&gt;  </run>
            <run fontalignment='0' fontcolor='#72b966'>High</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#f9a655'>Actionable ---&gt; </run>
            <run fontalignment='0' fontcolor='#72b966'>To be Drawn pertaining to Business Growth and untapped areas.</run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='60279' hidden='true' id='7' story-point-id='6' type='text' w='67532' x='17441' y='28804'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Business Insights: User Overview:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>American Nation was purchased the more no of art’s than other nations and the avg ticket size is more for Asian nation.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>From the state point of view </run>
            <run bold='true' fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>TX</run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'> and </run>
            <run bold='true' fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>FL</run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'> having a greater number of buyers. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run bold='true' fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>UT</run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'> and </run>
            <run bold='true' fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>IA</run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'> state users are the top state users who purchased the art’s through online mode.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>User’s gave a high critic rating for Dart Art I and Gothic II art categories and 4 bins of 3 points each for Critic Ratings-No much difference in Avg cost based on Critic Ratings Most Rating is between 6 and 9.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>For the Yr 2013 Acquiring cost for the 1st and 4th Quarter has been increased in the 2nd and 3rd has been decreased suddenly.   </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontname='Benton Sans Book' fontsize='9'>From the above data Business team has to take the below necessary actions</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Need to work on the remaining states and should provide the discount offers to the user to buy art from online mode. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Need to work on the art categories which are having the less critic rating. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run bold='true' fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Business Insights: P&amp;L Overview:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>All the three auction houses are incurring losses.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Only Three states (OK, NH, CO) are having profits and FL, TX and NC states are in huge loss.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>The Art’s which are having Silver, white and blue colour are in major losses.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Art Border 11,12 and 7 are in huge losses.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Symbol' fontsize='9'>·</run>
            <run fontalignment='0' fontname='Times New Roman' fontsize='9'>Æ        </run>
            <run fontalignment='0' fontname='Tableau Book,serif' fontsize='9'>Art size 9*12 and 19*4 in are in top loses.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontname='Benton Sans Book' fontsize='9'>From the above data Business team has to take the below necessary actions:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='9'>Æ </run>
            <run fontalignment='0' fontsize='9'>It’s continuous loss in all the states except three business team need to work on it and provide some offers to the users/buyers to recover from losses.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Art Price Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='6' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='4' type='layout-basic' w='99034' x='483' y='929'>
              <zone h='49071' id='1' name='ART Auction House' w='49517' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='3' name='Art Piece size' w='49517' x='50000' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='7' name='ART Border' w='49517' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='8' name='Art Color' w='49517' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='P&amp;L Overview'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='5' param='horz' type='layout-flow' w='39829' x='483' y='929'>
            <zone h='98142' id='3' type='layout-basic' w='39829' x='483' y='929'>
              <zone h='98142' id='1' name='Areawise Profit Loss' w='39829' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49071' id='7' name='RegionWise Profit/Loss' w='59205' x='40312' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49071' id='9' name='P&amp;L Trend' w='59205' x='40312' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='User OverView'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='13' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='11' type='layout-basic' w='99034' x='483' y='929'>
              <zone h='98142' id='5' param='horz' type='layout-flow' w='49517' x='483' y='929'>
                <zone h='98142' id='3' type='layout-basic' w='49517' x='483' y='929'>
                  <zone h='49071' id='1' name='Statewise Buyer Purchaes' w='49517' x='483' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49071' id='10' name='User Nationalwise Analysis' w='49517' x='483' y='929'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='98142' id='8' name='AreaWise Online Purchase Data ' w='49517' x='50000' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='ART Auction House'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='RegionWise Profit/Loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iy7cqs1px7oav16v74o3151dgkq].[sum:Calculation_260645882993795073:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Nationality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='User Nationalwise Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Piece size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Piece Size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Piece Size:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Guarantee'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[:Measure Names]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Piece Size:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Type:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:AuctionHouseGuarantee:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ART Border'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Border of art piece:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Good Art'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Border of art piece:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Brush Finesse:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Brush:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:GoodArt check:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Color'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Border of art piece:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Brush Finesse:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Brush:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:GoodArt check:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Prominent Color:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='VNST'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Areawise Profit Loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Calculation_260645883005501444:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[ctd:Cid:qk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Calculation_260645883005501444:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Zip Code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Purchase Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='P&amp;L Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Purchase Date:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[yr:Art Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Auc House  '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Auction House:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Purchase Date:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Statewise Buyer Purchaes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Art Catwise User Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AreaWise Online Purchase Data '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Category:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Art Nationality:nk]</field>
            <field>[federated.0iy7cqs1px7oav16v74o3151dgkq].[none:Vnst:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='User OverView'>
      <viewpoints>
        <viewpoint name='AreaWise Online Purchase Data '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Statewise Buyer Purchaes'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='User Nationalwise Analysis' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='P&amp;L Overview'>
      <viewpoints>
        <viewpoint name='Areawise Profit Loss'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='P&amp;L Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='RegionWise Profit/Loss' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Art Price Analysis'>
      <viewpoints>
        <viewpoint name='ART Auction House' />
        <viewpoint name='ART Border' />
        <viewpoint name='Art Color' />
        <viewpoint name='Art Piece size' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Art Auction Story board'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='147' name='ART Auction House' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ART Border' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AreaWise Online Purchase Data ' width='192'>
      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
      G7EFEpxo/j9sPSaUXDEFvgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Areawise Profit Loss' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Art Auc House  ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Art Auction Story board' width='192'>
      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
      UJBgKITZadE2bPoTMZr1KpKmo8oSgYBOu1nHdGQSsQjdrkEgoO8dAZr1Kg4KgUAQx+pi2ALd
      pxEM6JRKRcJ9Ccx2HUn1o2k+cCwaHYuBZBzbMilXG/Qnk6iyoFAs059KocoSltGl2uyQSibo
      NhuYQibeF8G4ywY/5WKJYDSG1Wkia34URUPCRdd9GGYPfffeyThU6m1SqSSKLCGEoFIuEYzE
      QDjofj+GaaH7VIrFEqFobHdMQNCs1/bqqEgOpXKNRH/SE8D98MYBfrrxmkAeBxpPAA+RTufe
      YcfCtekY1vtszf0QWNa9XJyCTqf7nl7Zsh78Xggh3lW+++EJYF+4fOPZv+KZZ57l1auLb/qb
      wYULOxGPf/3c1++Z26ln+dsfXL3vVYTr8P/9l//Ei1fu3HW+VcpwYyX7jnm7jQKzN9PvmOZu
      LK5d3Ym6dHoGf/O1r/HMM8+yspXlub/+9luT97pcun533UuZVZa2KoDDpcvX3/ZKlUKeiy99
      n2+/eIXsdoWrV+cewM5dhMvV2fkHz3cfvHGA/eB0Wc/U+OI//iLDqTgrC9d45foy/nCMR6Yi
      fPObL+L6VJxunW98/Zs0eiqf+/gp/ubbL6P4w/zqp86wdusG/yN3m4986jPMXb7Gl77ws3z9
      W6/wK5//9N5l2pUtgiPHSd+eh3NTfO2rz6HpYfyiztXVBtqvfJbz3/8u0b4wgYFpDscFlxfW
      SAxPEu3l+P7VDIr2eU4fHaeUz5IvVenaEkMhQaYhsLsNzj35JHduXMcX8NPt7YyKLs9eoG/q
      HJ98/DBg8I3sBn/1l39JfPIUWjtH3bQ5fvIkuWyRJbnDxZvrDE9M01q/wlJF5Utf/AK5XIZG
      KcXf/sMPkbUQv/6rv4Sm7PjNEgNDHOlWyIghRgYTzF4+z8LCAj3hZyAssV3v4rgSY3GdrbpB
      fyJBWDZJF5rYruDDjz8CQCmfZX5OBb2PkNSl0XXouRLjUTCih/A31jHD42SWbhDti3N05ihz
      V68iyxKj08fZXFpAD0eZPnKMkF/m4uXr3htgXygh/uk/+UVmL7zE3/zDy1y8fovf+I1fI2xU
      SM2c5PjMaT5y7gRKoI/Pfe4XMepFZi+9iuGqlLeW2W7YTB0/w2986Wmuza4SkTqcP3+R1OTR
      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
    </thumbnail>
    <thumbnail height='192' name='Art Catwise User Rating' width='192'>
      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
      AMZe+w35yQQHX/+W1QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Art Color' width='192'>
      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
    </thumbnail>
    <thumbnail height='147' name='Art Guarantee' width='192'>
      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
    </thumbnail>
    <thumbnail height='187' name='Art Nationality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Art Piece size' width='192'>
      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
      QPJJ8/8DxxM/SSIOl+4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Art Price Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WXBd15X39zt3nud7cTEPBElwAAeRsijJsttuu23ZsbrVlaquOF+5u7or
      Vamk+yWVzksqqa4kT3nrqqTL3V8l9fVD4ip/3e62Y0tWe/gkWiQlEiRAQAQBEDMu7jzPZ84D
      xCtRnAASHKR7flUsEMA6+6x9cP737LXX2vsIuq7rGBh0KaZn7YCBwbPEEIBBV2MIwKCrMQRg
      0NUYAjDoau4SQKOcZztbBKBdLzE1NcXc/BKqrpPaXGVqaoqpqSmWVjc7x6hig5WN7YeeTNd1
      bk86pZJJtF04KDYqVBoiAKVCAdWYszLYRz4jAJ3337/A++//DoDc6kdoviFG+wL88t/epXdo
      jPGIhYoQ5NDYUOeoj65c4K3fnEfVP7nJP/1P0zR0XefmlXdZyTbQdR1BEHbO+Knff9YeoLB5
      gxsbBQCuT31IS733Mfc+/s62DAw+i+XT3+i6RlMRCFoUqtInN43LG0CV2/duQddZzTX55vEY
      NxMlhklwKWXn90/28avfXWM05iRb1wiFQmwntpDrDjymI1ydvsbrsW/yb+/8ilA0QkuxErdV
      WaxY8aklwmMvcvxADwCarqGq6s6NrKv89p138IejVFoK4wGJrPMop2Iy/2kui62VxBPqIdzT
      j7mZYy1Xp14s8JU/+DZeu+XefTDoWu54AhTXr5MqS5j1Fr+7chPQWfzoKj/8+//AV7/29Xs2
      IDfzbCbSlCWdq5cu3vX75a0cr73yEscmDjI4NMSR4yeIRwMANMsJnKExXnzxJeqlFAgmJo5O
      cmryIJVSrdPG2tJNZmdn2UrlUBsFFGeMsy++CI0S4mc+3IPBAGJbxGa1MTc3j91uw2lRyBSb
      j3mpDL6IfEoAOlM3EvzFD/5zvv7Gf4GUXQIEDh8/w3e//iLvX5q651BifnqGP/z+n3Luy79P
      wCohOFyo7TqZZIK2rBH2WEnkyhQKBbxeD8ViEUVRAHB4opQLmzRqJTA77+vkgcPHOH36NEN9
      McwuP2IlQ7NRo6WZ8bndiM0624ktFFUnEOnl7NnTXL18id54BH90gJOnzxLz3799g+5F+KQU
      QqdQKBIOhwEoFPJ4HFYkkxOv00YuncQf7cUkN6grZgIe58d2BULhMAJQKRVw+UMk129h84Sx
      Wy0EA17Wbi3iDMaJRwKsLS/ijw0iqCKhUIhWrczKVprDhw+htGpgc2NFoikK+LxOpGaVNnZ8
      LjvlUhFvIITarrO0ssnBw4exW0ys3FrAF4phsdpxmFVurW4yfngCl83C+uoSmtXL6GAfH4cd
      BgYdBKMWyKCbMfIABl2NIQCDrsYQgEFXYwjAoKsxBGDQ1RgCMOhqDAEYdDWd4hhd16nX6/vW
      8O2iNLPZ/FhtCI+RvXraxyuKgsXy+PVGj+v3frWxm3Ye1uf96gvwRK7JQxNh7UaVTLFBLBLA
      6fyknKDRqON2ezoN66pMWxFwOazAzoX53/+f85Rb6mN4DDxin//Lb57g2HD4sW7Ivd7Q1WqV
      /+3//fCRz9fhEfr93//JK8SC7s73+yXGh7VTq9Xwer2PfPxu0HUdVVVZS1f49z+/9hgNcdd1
      faBnuq6xvL7FoYOHWF6aB6ubnmiAZkPE6bRRyKaxurws3viI4ydPYDI7SW2u4I/1E/A4WUuV
      yValR3f4Mag1RYrFIhcuXODNN9+k2Wzy7rvvEgqFsNlsJJNJjh8/zuLiIt/61rcol8tMT08j
      SRIul4tsNsv4+Djr6+u8/vrr5PN5rl27xvj4OOl0mmazyUsvvcT58+d58803O+dd3Cw8k/5K
      isqHH36Iy+VicnKS9fV1PvroI8bGxsjlcgSDQV544QVyuRwXL16kp6cHSZJ4+eWXyWQyzM7O
      cuDAARYXFzl37hyxWIy5uTlmZmaYmJggk8lw8uRJ5ufnmZiYYHh4+J5+/PznP+fMmTMsLi5S
      q9WIx+OkUim++tWvomkaFy9eJBaL0W63SafTHDlyhOXlZV5//XVkWeb999/n9OnTzM3NMTg4
      SLPZZHNzk+9+97s0WvK+X9+HxgBmswWr1YLLGyBgt5Ivloj39VEqFQEBUVbpGxzEY9XIJNZJ
      VyWajeej8jIUChEMBgFot9vIsszq6irRaJRKpcLQ0BB2ux2AQCBAPB7n1KlTnDp1ipGREUZG
      RrDb7ZjNZjY3N3n99dcpFAocOHCAw4cPMz09jdvtfm7WGxw9ehRJ2vnAGRkZIRwOc/ToUQRB
      QJZlNE1jdnYWp9OJw+GgUqnQbrep1+tYrVaWlpaYmJhAlmUAjh8/zsDAAJqmYbfb+cUvfkGz
      2SSZTN517mKxyNLSEkeOHEGWZer1OvV6nWq12mlb13VqtRrNZpMzZ84wPDzM2NgYdrsdi8XC
      9PQ0FouFpaUl1tfXSSaTnb/Vk+KBAhAEE9Ggl5X1LYKBAL5ggGg0htUsEA5HMJtN2Kw2vE47
      DcVM79AIMa8Nt9sFgMVswvqM/pkEgXQ6zezsLBsbG2iaRjAYZGhoiO3tbcxmM0tLSztl1ltb
      NJtNcrkcsViM2dlZTpw4wb/+67/icDgoFAoEAgHeeustgsEga2trjI6O4vV6WV1dRVU/GeY9
      q/4KwMzMDLOzs6TTaWq1Gm63m2q1CkC9XieTyeDz+VhfX0fXdSRJolj8pAByeHiY6elpbty4
      QTabZWNjg+HhYUZGRpBlmddeew1N0zoi+zShUIjx8XGmp6eZm5tDURRMJhP9/f3Iskx/fz9b
      W1t4vV5kWWZ6eprTp0/zk5/8BIfDQT6fZ2hoiEajgcViwePxIIpi52+lqiqCsP/X94kVwymK
      0hlOPE4b+zGGLxaLOByO+/qSTqeJRCJ3nev28dvb2/T19T00CHvYeHivfj8q29vb9PT03NGG
      KIrUajUikcgdtqlUip6eHkymTz4LdV0nmUzS39+/bzFANpslGAxitVrv6/P9rvHtGOBxY4l7
      9WXXAtB1jWKxTDgcAkDTtDsu2m1u/1xRFKo/+++wi/k9OWn/0n+FNvgq165d4/jx48zPzzM6
      Oko+n8disTA+Pk6xWGRubo5Tp04xOzvL+Pg4oVCIfD7PwMAAiUSCbDbL8ePHuX79OsePH6dY
      LBKPx/c0K/UoQbD5F//1nvoLYDv1fUrhL3X6WiqV6O3tpaenh62tLQqFAhMTE8zMzPDCCy9g
      tVq5fPkyoVCIAwcOsL6+ztjYGPl8nmKxSH9/f+e63Lhxg8HBQQ4cOLBnv+D5CoLv1U4qlcLn
      8yEIAuVymb6+Pra3t6lUKhw5coS1tTX6+vq4evUqx44dw+/3s7a2hq7rtNvtBwfBn6aeT7K0
      VeFFl4Xl7SKFzBajBw5TK+exe4JYtRYt1Uxma42Dx04T8rtRc0tozcSeOqs1i8zMzBAIBJie
      nub48eNcunSJV199lXfffZcDBw5w/fp1XC4X+XyefD7P2bNnuXr1Ko1Gg4GBAfx+P0tLS/z6
      17/GZDLRarX43e9+xxtvvPFYT6Rd+Z+e3fMxeuObxI7E0DSN7e1tyuUyyWSS73znO/j9fhYW
      FggEAvT29nLz5k0OHTrEzZs3+d73vsfc3BzLy8uMjY11rsvCwkLnQ2NycvKeY/bPO5IkoWka
      7733Hi+88AKJRAKz2Uxvby8zMzNYLBai0Shvv/02P/jBDzh06BBTU1N8/etfZ2FhAV3X+c53
      vrPLRJius76dwWtqsplI4on0EY1EiYR82D0BUNusrW0iKyqRWA+hgOexO2e1Wmm1WsiyjCRJ
      iKKIpmnIsszRo0cJBALkcjm+/OUv88tf/pJarcba2hqKotButzGZTLTbbQ4fPszCwgJ9fX2d
      4O55RNd1FhcXGRsbQxAENG1nHbQoilgsFjY2NqjVahw7dgyAb33rW1y8eJF0Os329jbtdhtd
      15FlGV3XMZvNiKLI3Nwcx48ff8a9238SiQQzMzOYzWbm5uZotVosLy+jqiqapiEIAvPz8+i6
      zubmJpqmIYoiiqJ0Nk8olUq7HALpOq22iMNhp9WsY7G7EdQ25bqIz+MGdBSxSUMCn8tCUwKf
      x0ntl/8zdrm4p47ZTv879P6XuHHjBgcPHuTWrVsMDQ1RKBSw2WxUq1VGRkbY2NhgYmKCGzdu
      cOTIEWw2G5VKhY2NDaLRKKVSifHxcZaWlhgZGeHGjRuEw2HGx8d37cteH9+1ahXzb/6HPfUX
      wHr8jzEf+AaNRgOPx8PCwgLRaJR0Ok0wGKRarRIIBNjY2CAYDOL3+ztDHb/fT7VapVwu4/f7
      KZfLxGIxFhYWmJycpNVqPVZc8rwPgW4/Cex2O9Vqla2tLaLRKPV6nQMHDlCr1bBarZ2hYKVS
      wel0ous6wWDwyQbBYqOB0/HwtbiCAILNhqqqnRmV2xdOVVUcDkens7fH8JqmYbVakSQJm82G
      IAiIoojVau20IQgCuq5jsVgeKYu4ZwHUarht9l3ZClYLfOyz3W6/ox+yLGM2mztPAZvNBtCx
      vb2m2mq1dmZlbv/fbDYjSRIWi+ULlwi7/VSz2+2dr0DniW+1WpFlGUEQUBQFu92OyWRCFEVM
      JlPn+ty+rywWy+5jAABNk2m3dUSx0ZlfBxDrJRRbELftTvvM//g/Yck/PAg2B4P0/d3/wTvv
      vEM8Hsfn83HhwgVeeuklUqkUXq+X06dPc/36dZLJJIIgIEkS8XicSqXC2bNnsdlsXLhwgUAg
      gMPhYHNzk9dee40f/ehH/NVf/dW+lAU8DF3XSfzpn+3Ktud//V+Yq5SpVqv09fWxtrZGT08P
      p0+f5t133yUWi+F0OpmZmeH1119ndXWVXC6Hx+MhlUoxOTnJ+Pg458+fx2q14vF4uHXrFsFg
      EEmSGB0dZWJi4sl2+CkzNTVFrVbD5/NRrVbx+/2cPHmSubk5bt26RTwex+Vy0d/fz6VLlzh3
      7hzxeJwf//jHvPrqzsQKwNmzZ5mZmeHNN998cAxQz6eYuXGTdCrJjRsfsbZ6i6mpG2Qz29y4
      Pk0ynWH2+gyZdIqbCzdZW1slnSuR2E7tuXOappHL5VhfX2dwcJCxsTFGRkZoNpu4XC7MZnPn
      6+3ZJ0VReOWVVygWi5RKJc6ePYvJZMLpdHLo0CHefvttNE17oomUxyGRSCAIQic4E0URQRA4
      efIkJpOJYDDYmU/3+/0ALC8vI4oiS0tLACSTSYrFIqIo0mq1OjHQfnz6P09cvXqV9fV1AEql
      Erquk8vlsFgsxONxzp07RzqdJp1OEwqFiMfjDA8PYzabOXLkCIuLiwiCgCAIDA8Pdz7AzX/z
      N3/zN/c7qaZplPMZCg2F4YEemqKIy+nH4bTSF3JyayuPxWrFZTfhDfcitWVquU18sSGcNjOV
      X76DqfnwrLDJ6cT/vf+Mer2OxWLB7XYTjUapVqtUq1VsNlsndW6z2TrZ2f7+fubm5ujr68Pp
      dDI9PU1PTw/z8/N4vV7+4A/+AJ/Px9DQ0CM9Ae431Xs/RFGk/f/9fFe2nq9/DXssSi6X48SJ
      E1y+fJnh4WHK5TKLi4tks9nOdLKqqgSDQdLpNOfOnaNSqRAKhWg2m3i9XkRRZHBwEIBYLIYk
      ScRiMQKBwJ77/Fkedg0kSeoMRR7l+N0Sj8ex2WwUCgUOHjxIsVjk2LFjFAoFqtUqExMTiKKI
      LMv09vZit9tRVZVKpcL29jbBYLATK+i63plyfmAMoCoSqUyBvt4oqVSOvr442UwGXzCIzQSq
      YCabThONRsjmCsTjMW7OLzF54hiqopD54T9g3UWFqcnjIfKX/81dP789fhRFsTN2uxfNZhOn
      03nXTb5fibTdUq1Waf/dD3dlG/zBv8Pa13fHz27P4JhMpjvO22g0cLvdd9jentX4dIHi4/h+
      P56nGOCz7UiShCAI902uffa+eGAibL/LoVVVRZblTgD7qG08Tjn10z7+9nDtcXlcv/erjd20
      87A+74cft6ctH/dJci9fOnIQBGFf0vi32Y9SiMd9fD6L4/fjGu7HsGG/hh67aedBfd4PP/ZL
      APfy5bmOlB63w8/6+Gd53v3y/Xm4hreD18flXr48MAh+HDRNQ5FF1laWweIgubFCtlAhGA5h
      emBfdBJrK2hWF/nkBtupLG5fAKtl9xcyndggkS6gSy22trfB4sLlsD38wI8p5tKsb2xhEQTW
      NjcRFf3jhN+DkSQJkyaxsLiM0+tl+eZNai2JUMC/i7PqZBLrtFUb5XyS7WQKu9uP3bq34UO9
      XGBlbQOz2cLa6ioNSSXg2+NTSVNYWV6m2hSpFjMk01m8gSAW891/gzuDYJ2NlVvkq020dp2t
      dAGXBZaW1/F57KxuFwh5LCwsJ4iGg3e1dRtVarJ0awVFN5NPb1EXNVq1IqlcGU2qIapWWtUc
      lZaKx3X/IXYpl6TYkBHEOivrCbxeF0uLS9gcLja3EoQC3ie7JrhRTBHoO0ilmKVardGs13bx
      ggsdl8NOsyVRrdZQpBZtaW8lDNHePlBFKuUqqq7S2OP6BI/HgyI2qZQqtFWNxh5io0Qqy5Gj
      E2SSG9SqDWq13R/r9rqoV1vUKlVUVaLZEvfkN4DLFyTkdVCrVmi0ROp7OH8HkwWPy0Gj2aRW
      qSK1m4jyg1f2aZqKLKu4PW6a9SaVRpugzcRKMsfE4UGSa5skcyXSyQyycv9FUooio5lsDMSj
      NBsFNMGL2KxSb8m4dIVCW6VczFCslGhU7903XdeQJBmny0OzUSNbqjI2GOGjmQVGDh8in06S
      z2UoFvNPVgBmq416pYCiQSAUxeswIT1shaQuIAg7MyJOt4+esJ9me2+rylaWFukZGMbhcDDQ
      30erubebQFJ0YkEX1abCwPAgstja9bE2E+SLBQSznWi8H5O+S/HqIAg7tTw2l4e+WJhma/fn
      vU0utYlochMJeIn3D6ArexeRrso4vAGkVgOX108s4KYlKQ88RpVESpUyVrsXTW4hyxK1Vgub
      oFMolDDb7UR8DrYrIk7L/YcAjVqFaiHDerbKYH8/YruGJCsokkhDlLAggCphttz/k1/XFPKF
      UierrqsKpXIFt8dJsVBEF8zEYlEWbiWe/HqAZr2GLxShnEujW5z0REMPPlBT2d7eRjfb8DjM
      1FsKfX1xTHsYA2bT27RkCAc8FEpVevv6se1hCNWqVylUW8QjPrZTWSKxOG7nw0scarUaHo+b
      TDpLLB4jubWFyx8i5N/FEETXSSUTyLoZv8dOtS7S19eL+cHjxbuoV4oUyjVCkQjlfB5fOIrf
      s7eJCF3XyKZTOLxBtHadhqTT1xu759/gzmlQnVwmjdnhxWM3UW3KhANuMrkiPZEgkm5CEUXM
      ZtMDZwfldoNkJo/XH8Kii5gdPiy6RF3S8DjtmFDRTDbQNOz2+w1tdXLpFE1JoTcep1SuEouG
      yGWzhCMxFFVBkeXne0HM5439WhDzeeLz3mdjXyCDrsYQgEFX87kVwNatOW4s3/vVrKnNVT68
      OoOs3Pki1nq5QF18cDD3NJFbVS5dukSmsLtivWoxR0ve6dPSjWusbGXusslkMoiNAisbd/8O
      4ML5X3Ppw6uoug6qyPziyqN3YF9o8eu3f8W12ZvoOij1HEububusUqs3OH/hAzZTBebnb7K2
      NM/m9jYXL17e1et278dznQh7EIvrSWQ1iVbdQrEGaZeT5Es1fv/1N7g2d5PvfPe7LF6fYjtb
      xOPz0ZAEbPUE9eBhvnXu+KPut7WvTF+4yIEvfxNHYYXrSzWq6TVSiTWCAT+SPYbXVKcmW7Aj
      IokKJrWGa/hFvnJqjI1EGlUok9q8RW/AQVZx47IIfPi73/Ktb3+DdKrE6tIc3oCPfCqL2enm
      9W9+jUK5hsvc4Odvpenr7UFqyLy7tUq8L87q+hY9gwc5M3nwKV4FiUZLoL62THb9Bn29cUqa
      m9Wb1xnqCbGRTjE68SJKcp2Rye8w+/5bBPw+VhbnOXF8nBurTRTx36grNmxyFV8kRi6bJxAJ
      UcgWcfkCOBCJ9vWxsrRCqHeEc2c+WSH3uXwCqGKVdKZELpNhNVlgeLCXfLmGFRlNB6ugk80X
      SaSy9IRctDQb5eQ6Vk+QeE/sWbvfIRjykkykqFUrZHM58sUy3ugAYbeF0y+eZWV5jXAkjChr
      BBwmfJEeYrEIUqNAttAgnUpSLJfJZNK0VZnhoQH6+gfxu6zkUgmsviiFTBKT3YMu7eRCmvUq
      x158DTM6Z08fo1IsUJcEHFqDXE3B73v6kxblYp6vfu3rqIKDyYMDFDJJBHeUWm4LyeLF69z5
      nK6V85isTirVKtH4AMcmxhkdHmR5eZVIOExbNXN0OEyi0CTgdeLwhhAbJSoNiaBdZytXJxC4
      M2D/XM4CqbJISwaTJqILJgqlGgG3lfPvnef3vvPHOGizmcww0BsjlSkQjwZIpAqMDPWRTOcY
      GOh7Ik+Avc6I6LpOcmsDX6SHYjaLPxDAZDZhQcPq8tOq5im3VPxuB2YBbE4H2WyJeMSPqFtA
      bqKoKpVak6DfR6XRxucwIWPBZrNRL+XxhXtQZAl0Db/fT6VS+dRXL5VKA01uollctCo5vOFe
      /J7dv1Hz8WeBVCqVFn6/Z8cnj4NKS6NVzuENx8hsb9E7NApinc10gbGxMZr1nb2OvB4n9ZYK
      cp1KS8fntuP3+UgmNnD4QlhMJnRNRdBk2poFtVXB7g0T8n+yZv1zKYDnlc/7lOCj8Hnv8+dy
      CGRgsF88sSfAfpWwfp7Yrxr8zxOf9z4b7wk26Gq65+PZwOAeGAIw6GoMARh0NYYADLoaQwAG
      XY0hAIOuxhCAQVdjCMCgqzEEYNDVGAIw6GoMARh0NYYADLoaQwAGXY0hAIOuxhCAQVdjCMCg
      qzEEYNDVGAIw6GoMARh0NYYADLoaQwAGXY0hAIOuxhCAQVdjCMCgqzEEYNDVGAIw6GoMARh0
      NYYADLoaQwAGXY0hAIOuxhCAQVdjCMCgqzEEYNDVGAIw6GoMARh0NYYADLoaQwAGXY0hAIOu
      xhCAQVdjCMCgqzEEYNDVGAIw6GoMARh0NYYADLoaQwAGXY0hAIOuxhCAQVdjCMCgqzEEYNDV
      GAIw6GoMARh0NYYADLoaQwAGXY0hAIOuxhCAQVdjCMCgqzEEYNDVGAIw6GoMARh0NXcJYOWj
      a7x3efYuw2RiC/VT32uyyJUPLnHlyhWK1eYdtu16kkuXF/bdWQOD/cZyx3e6zvxqAlXT0DlB
      ObOFavWwvrnJ7MX3OfrSOQ4fOkrQ6+TS+f/E4S99jYjHhg7k0wk2klkOHDyCXVdpixKq3GZ+
      /iZ2b5iDY4MktrZpFLNEx44S9jqeTY8NDD7FHU8ATa6hCE4GfRbW8k0SizP89N8uMDA4zNDI
      CKfPnCHodQKQr4tEvHYQBDS5wQfXFjg5eYz3z7/Xae/ie+/SNzYBlU0WtvK887P/SLap43Va
      n24vDQzuwx0CWLx2Gd1qRbbYuXr5Mggmfv9brxMPBxAE0D9l6zALtNWdn6hKA7vTj8VqxyRo
      HZu6qBLyOumJRyjmysSGD/GVl89gs5ifSucMDB7GpwSgk2wIvPnt3+Pca9/Ab5GxOV3YP75Z
      D40NcunCh1QaIgBffvVLvP/ue0xNTVGT3bhMNS5f/oBI7zCCyYzTYefk0THOv3+Jq/PbnDw2
      gtfjfRZ9NDC4L4Ku6/rDzQwMvpgY06AGXY0hAIOuxhCAQVdjCMCgqzEEYNDVGAIw6GoMARh0
      NYYADLoay8NNHg1d19G0nbIIs3l3pQ+qqu7a9kH2jZZE+eOM9afRVBXTHtrfi/2TbHuv9rqu
      g64jmHb3+fY8+f60fdmTAJR2jcWVBJGeOB6HjVq9Sjzeu5cm7qJer1Ov1/H7/WQyGYaHh1EU
      ha2tLeLxOIlEAo/Hg8Wy42osFkNRFFKpFPF4nGQySTwep9Vq0W63icVinL++wQ9/dvWx/DLo
      DvYkAE1TEGUFu91KNpNH0Vq0WiKg0yjnKLQEegMOPOFeemPhXbSn8fbbb3P48GHa7TYrKyt4
      PB7sdjutVoupqSlGRkaYm5tjYmKCa9eu8cYbb/Dhhx/icDiYmppiaGiIxcVF8vk8J06cIBaL
      Peq1MOhC9hQDCIKNWCRIIpFAURRAwKSKyJiQZI3enih2l4++nshD26rX61y/fh2A7e1tVFXF
      6XQSDodxuVxks1m8Xi+VSoWzZ88Cnwyrent7yWaz2Gw2SqUShUIBi8XCxsZGZ9hlYLAb9vQE
      sDic+H0q8d4+0HduNJMAqi5AfxxJ0bDbbLtqy+PxcOrUKWRZRpZlEokEmqYxPz+P2+1G0zR8
      Ph+KohAKhVhaWiIYDLKwsEAkEsFqtXLy5Enm5uZ47bXX2NjYQBAEBEFgMObnWy8euOucmq5j
      EoRd93cv9k+y7b3a6x8Xrgt8/nx/2r48sWrQRwmCFUVB13Ws1vsvmJFlufN7RVE6scFu29+L
      fUOUUfTdXdz9CuD3w17XdHR0TLsMgp8n35+2L7u/G3SddDoDSgN7YIB2tYDN5SQcDNJo1JFl
      lUDAv+vm7seDbv4H/f5Xv/oVPT09HDlyhLfeeos//MM/ZGtrixs3bnD48GGWlpbo7++nUqmQ
      z+f53ve+Ry6X46OPPuLll1/m5s2bhEIhVlZWOHXqFJFIhFu5FtfTrcfuk8Hzy+4FIAjUG3Ws
      ZoFmdh1MLhLbC+RDPVgFlcTWFocOH2Jh4RbxoXEOjw08Oa8/RbPZpFwuI0kS1WqV6enpjkiq
      1SqtVov5+XlOnTrF2toaL730EpcvX8ZkMjE1NYXVamVra4tyuYzFYqG/v59Wy7jpu4U9BcEu
      s05bsFPOZAjGYvQODOOwmlA1jWg0hkVQsbsDBP2eJ+XvXVgsFhwOBwMDAxQKBWRZZmlpiUwm
      Q6lUor+/H4D5+XlkWWZ2dpYTJ05Qr9cJh8P4fD7W1tZoNBqsr6+zvb1NIpHAWCfUHewpBtBU
      BVUX0DUVq9XaGePruo6uqWiYUGURq92JxWx6pBjgUcf0lUoFq9WKy+VCkiQSid6enUQAABHP
      SURBVASDg4OUy2XC4TDVahWHw4EgCNhsNlZWVhgbG6NUKhEKhdB1HVVVKRaLmM1mwuEwW6UW
      2zVlV77omo5g2n0w9kTt9Z0wWNht0Pwc+f60fXnuguAnGdQ+Sfun6YtWSaCr0n1tdU0HjEzw
      buwfsRRCZ2n+BpJmIhoMEeiPY3+0hr7QlEolrl27Rl9fH+vr60SjUc6cOcOHH35IqVTizJkz
      zM7O8o1vfIOpqSnC4TCjo6O89957uN1uIpEI6+vrHDx4kOnpac6dO0ckEqH10/8WrbDyrLv3
      heCRBdBsNJF1E02LFXGzgS/STz6xwlYiQ3z4IBNPKQh+XkmlUng8HlRVpV6vUyqVOk/CQqFA
      uVzG5/NhsVgol8vUajWsViu6riPLMpVKhfX1dbxeL/l8HtgJ+A32l0euBrU5HLhtICogCDqp
      7QTNZguHN0joKQbBzytut5tarUYsFuvUM4miSL1eR1EUHA4HuVyOjY0NkskktVqNjY0NarUa
      PT09VCoVQqEQTqcTURSJRqOk0+ln3a0vHI8YA+i0Gg00wYzDZkUwCbRabewOB7LYxmJzPPUg
      +Fnb38tWURRKpRLBYJB6vY7dbieZTNLX10er1cJut3cKAW02G61Wi2KxSDAYRBAEHA4H1WoV
      n89HPp8nGo1iMpkQP/gheiN3X190dND3EATr+q5tn7T90/bFCIL3yf558uX2dd9tJviebTfz
      nXKXz/KkM8Ems3mXRRxPMxP8KeRWlVtrSfyhCP3xhxe+GTw5crkcMzMzDAwMsL6+Tl9fH5OT
      k3z44YfIskwwuFO8ODk5yezsLGfPniUWi/HrX/+aSCSCLMu0Wi0OHz7M3NwcL730El6vF6b/
      b5Dq9zznXje23Iv9k2z7XvaPJICNRJqhwV7ylQY3rl/FHwyyeGudnngP/mAUVREZHuzuIPhp
      UCwWcblcRCIRRFGkVqtRLBY7OQ2n08nW1hY2m43FxUV0XafRaHQC7Wq1isVioV6vd0rMy+Xy
      jgC6hEcKgoMeB9vZErVqBU8gTNBjxx2I0NM7QDm9hjdo1OQ/DZxOJzdv3iSTyWC1WvH7/bTb
      ber1OpVKhUwmw5EjR6hUKvT39xOLxUilUlSrVXp7eykWi4RCIRRFwePx4HK5KBQKz7pbT5VH
      igF0XafdamK22jGbBEwmE+1WE4vVysrqBocPHwQjBngq9u12m1qthtfrpd1uY7fbSafT9PT0
      ADtxgCzLuN1uyuUyZrOZdruNy+XCYrEgCAKtVotAIEC5XMbv9+/EDiu/AvXuZaUAmqZj2kP2
      dS/22seZ2t22/ri+GEHwPtk/T77sSxD8hOxz9SxtpX1fW01VMZnM7FYBTz0TnNxao9ZoEwj3
      oGkKvT2fDHc0RaJUaxIOBvbarMFzhizLvPXWW3z729/m/PnzOJ1OXn31VVZXV9nc3OTUqVNc
      vHiRr3zlK1y9ehVd1/na176GJEm89dZbnDlzhvn5eY4ePcr8/DwnTpygt7eX/+uDv2M2OfOs
      u9dhzwJoNpuoioooiohSi+tTK6g2P3ZBJhTpYTuxgXbgCJFg9wRSXzSy2Sxms5lIJNIpEHQ6
      d94MdPXqVdxuNyaTCZfLhdfr5cCBA0jSTm3S1NQUTqeT/v5+Njc3mZubQ9M08vk8vb2Pt4HC
      k2DPAjCZzXgdTlpiG12VEFUTutjE5rRjtVqwWEzIyu4qKA2eTzweD5Iksb6+TjAYxGq1oqoq
      1Wq1M3WaTqdZX18nn8+zurrKa6+9RrVaRdM0bt68iaqquN1uRkdHSSQSlMvlZ92te7LnGECR
      JdqijMvlQtc1ZEnCbLWCpqILZsxmE7qmYTabjRjgGdnvRwygKArlchm73Y4gCJjNZpLJJCMj
      I1QqlU6ph9vtxmKxYDKZ2NzcZHR0tLPOu9ls4vf7qdfreL1eLBYL/7bwFslK4r6+GJng5+Qm
      2qv98+TL4wig0M6h3ScD/En7Hwequ2Qv9k+y7XvZP9bOcIs351A0M4eOHMV6+1qrMtlynWjI
      CISfJJIkcf78eXp7e9nc3KS3t5eTJ0/y/vvvI8syvb29LC4uMjY2RjabJRQK8cILL1AoFJie
      nuarX/0qP/vZz3jllVe4fv06x48fZ2BggP+4+h9oKLVn3b2nxmMJoN0WcTocbG2ssrq8wvDI
      KKLYwuoJGQJ4ghQKBVRVZXR0lHq93lntpus65XKZarXKyy+/TD6f59ixY+i6ztDQUGfbGZPJ
      xMzMDA6Hg3A4TLPZ/Hifp+7jsTbHtdrtSLKG1G4S7x/EKoDD5TJ23H3C3N436dKlS1gsFnw+
      XycDPDQ01Kky9fl8wM5yUb/fT6lUQlEU5ufnkSSJW7dusby8TDQaJZe7f3XpF5nHigFUVcUk
      CKi6jiSKOBwORFHEZrNjMglGDPAE7VVV7QSjO9fcRiaTIRKJYDKZsFgsmM1mBEFAVVVarRat
      VotYLNbZW0mWZYDO2gOTycSF9G8Q1fsnqsAoh971iQwBPBv7vQbB9UoCTWns2hdN1TCZd/+c
      34v9k2z7XvaPFAPomsLS4hIWl48DwztVn/XCNrqnH6/FCIKfFLquc+XKlU4xW6PR4Etf+lJn
      KDMxMcHCwgIjIyNkMhkcDgfnzp3rbPfyyiuv8Mtf/pLJyUnm5ubo7+/nxIkTrFz9P0ku/+JZ
      d++Z8EgCaBQSuCIDNMt5NlaXqNWbuBwWTE0zG5WcEQQ/AURRJJPJEI1G2djYwOl04vf70TSN
      bDbL2bNnmZqaotls0mw28Xq9ncrO22sFbm8efHtL+uc1OfU0eSQBODxB8rcSaJqMxWXHbjWj
      qBqIEnanE2NLqf3HarUSiURYW1tD0zREUewspge4du0asPP+hEKhQDAYpNlsUqlUqFQqrKys
      EAwGyeVyyLJMIBAwdsDjMdYEy5KEhgmrxYQkK9isFhBMSKKI1WbDJBhB8H7bm81mms0mgiBg
      t9sRRZF0Os3w8DCtVquTnXW5XNTrdRwOB6lUilgshiRJnVkhQRBoNBo4nU4sFguJxZ9RLdzc
      tS9GELzLExkCeDb2z3M59G3UxhpKY/kuW13Tdr2h137Y72kIlFhfod5W6Ontx2ZSEax2qpUa
      PdEQ2WyecDhAqVTBHwpj3UNkbvB884tf/IKJiQmq1SpXrlzh+9//PuVymStXrhCPx2m322ia
      htvtJplM8kd/9EdcvnyZbDbL2NgYqVQKp9OJpmlUq1W++93votTmEVP/8qy7tjcBNCSVWMhL
      uVykVCzgsZsoVmpsbjrRVIl81oYzNEgtlWV0IP6kfDZ4SpTLZVKpFCdOnEAURSYnJztDq9uB
      9Ysvvsi1a9cIh8Pous7W1haCIKDrOqIoEggEyOfzjI6OUiqVqFQqz7pbd7AnAfhdNjKFCi6P
      j77+fkxKG9XkxO9xUKo1ifod2AMBGvXqk/LX4CkSCATw+Xy88847aJqGruscP36c7e1totEo
      Xq+XUqnEysoKfr+fbDaL0+lkbW2tk6FeXFykXC4zODhILpfDbn++NtE0YoB9sn+efHnSMUCh
      UCAUCt03+CyXywQCn0yD3zMGaKfR2qm7jtU0bdd+74f9E3tPsMEXF7/f/8CZl0/f/PfD7Ihj
      dtw9TL492/Wg9lVN42cfzQKgacIeF8Xfaf9QAVz74HeMn3qFhUu/5eDLv0ezkKOnJ0qj3sBm
      s1FriUT8bjL5MrGwn0Kpgj8YxmYxgmCDnU2C33vvPd544w1+9KMf8Wd/9meYTCZ++tOf4nA4
      MJvNFItFhoaGKJfLDA8PMz4+zsWLF0mlUp3XW/3xH/8xf/u3f8tf//Vfo+k6//7ShX3x76EC
      CPb0kk+sYLI6aNcrJLfXqVZLtDU3TnMLj03g2rbOSI+XpZs3sIcHqKczjA48f+s/DZ4u165d
      4/jx40SjUVwuFwcPHgR2hiHxeLyT0Gs0GjQaDVqtFhaLBavVyujoKMPDw1gsFprNJm+//TYu
      l4tisYjX//jvorvNQz+m7Q43YrNB//AQYquN2+vHarUy0BfHZbdSqsvEgm4yuRK+QJBwMIjD
      vrtXpRp8sXnhhRdIp9OsrKywsrLC8vIyy8vLbG1tUalUkGWZeDxOX18foVAIn89HvV4nl8uR
      y+UYGRnh4sWLAHzjG99gcnJy33etM4LgfbJ/nnx5nhNhkiShKAoul+uetqVS6ZPNue6Dputc
      3ljf+b8RBBt8nrDZbNge8DJ1r9f70NIGkyBwbmQUeLAYFU3j6tbGHT8TTPDp5vcmAF3l6tRV
      FCy8cOoohVIDtwXsgSCFdIpAOEq9XMQfjhqZYINHIp/Pc+3aNc6cOUM0GuXHP/4xbrcbm81G
      uVzmzJkzXLlyhbNnzzIwMMC//Mu/EIlECAaDSJLEwMAA165d480330TVVH67vPDA8+35LtV1
      HQFYmL/B2tI8iUSBrcQGZpuNlZszzN9aY3l161H7b9DF3Lp1i0uXLmG321le3qkTuj2Utlqt
      1Ov1TswwPj4O0EnQTU5OYjKZGB4eJhgM7vqcex4C2WxWNKz4/C5sLh8eix2ry0Y2ncZkd+MX
      NGLR0F6bNTDg4MGDBAIBPvjgg84LAp1OJ06nk56eHhRFQRAEotEotVqNUqmE2+3GbrczOzvL
      ysoK4XCYlZUVTp06hdPjfug59yUIFhtV1raS9A2O4nPvpLqNIPjZ2T/PQfBubM1mM5IkoWla
      Z0vGz1KtVvF4PGiadt+2VU1jrZi/82eqhvlxl0R+Frvbx8SEbz+aMjAAeGjN0O21DbfFfi/M
      JhPjkTvfVfFZMe5aALdufoSiqbiD/fidZmwOB+VqnaDfiwkN3WRDlVvUak0C4YiRCTZ4alSr
      Vf7pn/6JP//zP0fTNC5cuECpVKK/v58rV67wp3/6p/zwhz/kL//yLykWi3zwwQf4/f6ddyTs
      9iS6pqMoKiZTi7WNNi6HStBn5+bNDDaXFYsqIaBjDfTSMDLBBk+JpaUlent7GRsbA3aGfcFg
      kFKpxOTkJKIo8tvf/har1Uo+n8dms2GxWMhms5w5c2b3ArDZbWgmEwIm+vrjqO082UKNkQND
      bG1lUWWV0aEeNEeAZv35qvk2+OJy6NChzprn/v5+LBYL+Xweh8PB2toaJ06cwGq1MjOz804C
      SZJwu90MDQ1x+fJlIxO8X/bPky9fhCB4t+t8P912u93urJe+F9VqFafTidVq7fzMyAQbfGFw
      OBwP/L3P57trD9SHfkTousrs9FWuX7tKtdGiVKpQrZbIFsqI7SapZApN10gmtmi2JbLpFKKs
      Pl5PDAz2yObmJj/5yU8AaLVa/P3f/z2yLPOTn/yE3/zmN2QyGf7hH/4B2HlC/uM//iPT09MP
      fwJoahuXr4ehqJlbq7cQvL24tTK3tjKM9kXwu6xcv7HCYG+I1YVpig2IVEWOHBx+sj02MPiY
      qakpTp06RSi0k4B1Op0cPnyYdrvN+Pg41WqVt99+G03TaLfbfPTRR4iiSD6ff7gATGYnirjK
      wjqM9EdRXVEKm1k8Hg9urx+f24JfkUinkpjsXvyCamSCDZ4qZ8+eZWVlhdXVVfr6+vB4PKyu
      rtLb28v29jaBQIA/+ZM/YWZmhnQ6zenTp4lEIjuxxn5mgvuHxvC6dir9jCD42dl3axAMO4Hu
      gypKS6XSHbVCRibY4AvF7Qzx/fjsgppdC2BhfhYdMy6vn76+PhRJRBZbaCYrzXqNoMdCrmnH
      QQN/uMfIBBs8Fer1Ov/8z//MX/zFXyDLMhcvXmRzc5NAIECj0WBiYoJiscjLL7+MrutcvHiR
      crncqRzd9V16e09FqZqh1FDY3NpkZWOLYi6D22FhK5mlVUqxsLLFyrpRDm3w5FlcXERRFA4c
      OADsbCA8Pj7OuXPnOjYrKytIksTW1hYul4ve3l5effVVhoaGWF1d3b0A3L4gE0eOMtDfT3Jj
      GZPFQX9fH+gqyXSOQDCM2xfA73ERixhBsMGT5/Dhw+i6zurqKrdu3WJzc5NMJsP4+DhOpxO3
      282hQ4fQdR1FUSgWi7RaLXp6epAkCY/H8/hBcKlUJhi8ex8YIwh+dvbdGAQ/LAtcq9XweDyo
      qvpo1aD34143v4HB0+ZhWeD77Sbx/wMhz8Z6+VnwhAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Art Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Date' width='192'>
      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
    </thumbnail>
    <thumbnail height='147' name='Good Art' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='P&amp;L Overview' width='192'>
      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
      zlH7H5w2/h97Qaq49eqlrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='P&amp;L Trend' width='192'>
      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
      VARA0LX/D3skoziIMFsaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RegionWise Profit/Loss' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAFA0lEQVR4nO3dX09bdQDG8afntLSl/BkyHFUYS8C4aIxLDCR6YbzxxvfgG/DVeK93vgBf
      gFk0LlkiZmyauQ2YTMQNRvkvQgvtOV6QLJCUu9LfGc/3cwPl6gnpl/NrE3pyaZqmAkxFoQcA
      IREArOVPP1j/aVYbdx+E2oIOinoKmpwZU7K9GXpKpp0JoHZnTgtffxdqCzooXynr+lczSp4t
      hp6SaRyBYK1tAPmBikY+m1bprREVBvq6vQkdlnvjqhTHUl+/lC8omrwp5QuhZ2VCvt0Py9U3
      tfd4Sa2DQ/W/c0Pbc4+6vQsdFF2rKh24oly5LMV5tRYeSbz7LemcK0AujnT141sqDg91ew8u
      QNponFwBCj1SkkhHDanVDD0rE9oGcLSzp/Uff9Hh2oZ6J6oqVUe6vQsdlO7vKVlekiQltZeK
      37sllcqBV2VD2yNQ/UXt1ffPv7/dtTG4GOn6miSp9fu9k6+1tZBzMoV3gWCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGAtH3oALk5+6l0l/f2hZ2QaAVxiycqSkuU/Q8/INI5AsEYABv47PtbP/7zUv0fH
      mt/aVb3ZCj0pMwjAwN0XNU2PDqsUx5rf3tP81m7oSZlBAA5SqRTH2mkcaeOgrj82d0Ivygxe
      BBv4YGRIPyyvarhc1JfvT2p5d19JmirK5UJPC44ADIxWyhqtlF89nhoaCLgmWzgCwRoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwNqZ+wMMTo1p/PPpUFvQQXGpGHrCa+FM
      AKXNVQ0uPgi1BR2U6y1LH86EnpF5HIFgjQBgre09wgoT46p8+okOf51TrqdHuVJRh7Nz3d4G
      XLi2V4Dj5RU1Fp6q8WRR+eo1Nddr3d4FdMX5R6BUivoqaq6tq1AdlbilJi6hc2+Tejh7T5JU
      /+1h18YA3caLYFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFg7
      9/8B8PqLJialUjn0jEwjgEssWV1RurIUekamcQSCNQKANQIwcHDc1Df3HytJU935e1Xf3n+i
      JE1Dz8oEXgMYeLq1q5vDV7S6f6DRvl5dH+xTxKd8SOIKYOGv3X0lqfSwtqXbz55ru36klCuA
      JK4AFr6YGlecy6mZpKqPtfirdwoBGMhHJ0/5QpxTIebpfxq/DVgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFjLn35QGH9b5ZmPQm1BB0WloqKxG0qLpdBTMu1/SYbSyCThgn8A
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Statewise Buyer Purchaes' width='192'>
      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
      sN11mBDzFC8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='187' name='User Nationalwise Analysis' width='192'>
      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
      9kkAmo2W1G93YxkUwvCualSoUHcdTkiQJbu/TaW2qYy053bz6Q+OjA9ypzE/6oeeep13Xw+g
      j4MaFYCpFa4jn8PjpxOkNdExG6Mw/lNiHxrP2N5m9e5ryPZJAJpNFmknutLPQ/9HZu7Rj64n
      0mqe0lF7jrhP9uAyaSJu6sYd1b5TJ92JX1XhdQqsO2DZRMe8a4XxfBr7EOPHulHvIQ3cPglA
      s7nKlRIbrO78oamtsCm5wtVq+2vJiP2QQ0/MJLBHtVO48QpPs33pl1iM8cW5uY5Zd4NI2hDH
      Q+PHNuCENnz7pCCmOVl1oEO1FzvQwUr/lbM7wtDsANReBP/Hufo3eKNouXZsG/9dc4LHpv6d
      l9z0e6KmOWb9CpM2ENt2NH+v5+xvqvZJD9Cc8q9wpdqLV7iSr/+K44hwIiOX8apHKlt3ZtR6
      fdBg2msc2xRO6HYYGRHGOLf21U4ggx+zIQpTiPnSgqCJ9Q99mqp90gM0G0s6qC+TXwJ6P+2S
      fC6raxqPq3Gb+AbZ733AupR3mNLoux2FpKz7F191mMa7Yd3ruWg01DEb5uKBr0g4l0VC8N5q
      28I0O8DrFSKnuDdt+ypEM/mj4kT0nIrlB6/rvXr94PKKOdEnKv649ULymorwr3Nu73D5+4r/
      vLqwYldORaNcP7i8Yt6a5Irrde1k4GPek5yvK8LDv67QO3QTtk+GQM1GRc9hPlzduJQvM0vQ
      oqUk80uWbryKz7CetY9prb15eaoD362J49xd9/tXOXwwj6f97/J24T0dsxkYsH0yBGpO9j6E
      zNKy9uO5BF8qpa1tb/xnheBTz5Si5u4v8Xr2uyxZ50D4lLs5mbPI/PUs8XfMY6pTda5TQx6z
      eRiqfVIRJhRNhkBC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEk
      AELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC
      0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtH+H/9PpQhDxcDXAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='User OverView' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='VNST' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
